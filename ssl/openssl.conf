# The "ca" section defines the way the CA acts when using the ca command
# to sign certificates. However, the only thing that should be in the CA section
# is the name of the default CA's section. This "default" section to use can be
# overridden by passing -name to ca.
[ ca ]
default_ca      = CA_default

# Here we start our CA_default section and defined a variable to hold our base
# directory. "dir" is not a key that openssl recognizes, so it's just a varible.
#    certs / new_certs_dir
#    Depending on version, one or the other of these may be used, so we assign one a value and assign it to the other. This is, as you might expect, where certs go after we sign them.
#    database
#    This is the database of signed certificates. Openssl uses this internally to keep track of things.
#    certificate
#    CA certificate
#    private_key
#    CA private key
#    serial
#    The serial number which the CA is currently at. You should not initialize this with a number! instead, use the -create_serial option, as mentioned in our Creating a CA page.
#    crldir
#    This isn't a config option to openssl, so it's just defining a variable like $dir
#    crlnumber
#    This is the serial number, but for CRLs
#    crl
#    The current CRL
#    RANDFILE
#    This is a random file to read/write random data to/from

[ CA_default ]
dir             = /home/disrael/repos/k8s/certs/CA
certs		= $dir/certsdb
new_certs_dir	= $certs
database	= $dir/index.txt
certificate	= $dir/cacert.pem
private_key	= $dir/private/cakey.pem
serial		= $dir/serial
crldir		= $dir/crl
crlnumber	= $dir/crlnumber
crl		= $crldir/crl.pem
RANDFILE	= $dir/private/.rand


# This section defines how requests are handled
default_bits = 2048
prompt = no
default_md = sha256
req_extensions = req_ext
distinguished_name = dn
# This defines the section in the file to find the x509v3 extensions to
# be added to signed certificates, that is, the CA extensions for the certificate.
x509_extensions = v3_ca
# When acting as a CA, we want to honor the extensions that are
# requested. Note that you do not want copyall here as it's a security risk
copy_extensions	= copy


[ dn ]
C = US
ST = GA
L = Atlanta
O = HYFI Solutions, inc
OU = IT
CN = master-01

[ req_ext ]
subjectAltName = @alt_names

[ v3_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = CA:TRUE         # This makes the certificate a CA
keyUsage = cRLSign, keyCertSign    # Necessary for a CA certificate

[ alt_names ]
DNS.1 = kubernetes
DNS.2 = kubernetes.default
DNS.3 = kubernetes.default.svc
DNS.4 = kubernetes.default.svc.cluster
DNS.5 = kubernetes.default.svc.cluster.local
DNS.6 = master-01
DNS.7 = master-01.dalexander1618.synology.me
IP.1 = 127.0.0.1
IP.2 = 10.1.0.30
IP.3 = 10.96.0.1   # Kubernetes API server ClusterIP

[ v3_ext ]
authorityKeyIdentifier=keyid,issuer:always
basicConstraints=CA:FALSE
keyUsage=keyEncipherment,dataEncipherment
extendedKeyUsage=serverAuth,clientAuth
subjectAltName=@alt_names
